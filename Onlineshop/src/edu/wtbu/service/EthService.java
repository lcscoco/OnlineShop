package edu.wtbu.service;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.FunctionReturnDecoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.admin.Admin;
import org.web3j.protocol.admin.methods.response.NewAccountIdentifier;
import org.web3j.protocol.admin.methods.response.PersonalUnlockAccount;
import org.web3j.protocol.core.DefaultBlockParameterName;
import org.web3j.protocol.core.Request;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.response.EthAccounts;
import org.web3j.protocol.core.methods.response.EthCall;
import org.web3j.protocol.core.methods.response.EthGetBalance;
import org.web3j.protocol.core.methods.response.EthGetTransactionReceipt;
import org.web3j.protocol.core.methods.response.EthSendTransaction;
import org.web3j.protocol.http.HttpService;
import org.web3j.tx.Contract;
import org.web3j.utils.Convert;

import edu.wtbu.pojo.Goods;
import edu.wtbu.pojo.Order;
import edu.wtbu.pojo.OrderDetail;
import edu.wtbu.pojo.User;

public class EthService {
	static Admin admin = null;
	static Web3j web3j = null;
	static String bincode = "";
	static String syPassword = "123456";
	static {
		HttpService service = new HttpService("http://127.0.0.1:8545");
		admin = Admin.build(service);
		web3j = Web3j.build(service);
	}
	public static String newAccount(String password) {
		String address = null;
		try {
			Request<?, NewAccountIdentifier> request = admin.personalNewAccount(password);
			NewAccountIdentifier response = request.send();
			address = response.getAccountId();
		} catch (Exception e) {
			// TODO: handle exception
		}
		return address;
	}
	public static String getBalance(String address) {
		String balance = "0";
		try {
			Request<?, EthGetBalance> request = admin.ethGetBalance(address, DefaultBlockParameterName.LATEST);
			EthGetBalance response = request.send();
			balance = Convert.fromWei(response.getBalance().toString(), Convert.Unit.ETHER).toString();
		} catch (Exception e) {
			// TODO: handle exception
		}
		return balance;
	}
	public static String getAddress(int i) {
		String address = null;
		try {
			Request<?, EthAccounts> request = admin.ethAccounts();
			EthAccounts response = request.send();
			address = response.getAccounts().get(i);
		} catch (Exception e) {
			// TODO: handle exception
		}
		return address;
	}
	public static String getOrderAddressByHash(String transactionHash) {
		String address = null;
		try {
			Request<?, EthGetTransactionReceipt> request = admin.ethGetTransactionReceipt(transactionHash);
			EthGetTransactionReceipt response = request.send();
			address = response.getResult().getContractAddress();
		} catch (Exception e) {
			// TODO: handle exception
		}
		return address;
	}
	public static Boolean unlockAccount(String address,String password) {
		Boolean unlock = false;
		try {
			Request<?, PersonalUnlockAccount> request = admin.personalUnlockAccount(address, password);
			PersonalUnlockAccount response = request.send();
			unlock = response.getResult();
		} catch (Exception e) {
			// TODO: handle exception
		}
		return unlock;
	}
	public static String toAmount(String from,String to,String amount,String password) {
		String result = null;
		Boolean unlock = unlockAccount(from, password);
		if(unlock) {
			try {
				BigInteger value = Convert.toWei(amount, Convert.Unit.ETHER).toBigInteger();
				Transaction transaction = Transaction.createEtherTransaction(from, null, null, null, to, value);
				Request<?, EthSendTransaction> request = web3j.ethSendTransaction(transaction);
				EthSendTransaction response = request.sendAsync().get();
				result = response.getResult();
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		return result;
	}
	public static String recharge(String address,String amount) {
		return toAmount(getAddress(0), address, amount, syPassword);
	}
	public static String sendTransaction() {
		String result = null;
		Boolean unlock = unlockAccount(getAddress(0), syPassword);
		if(unlock) {
			try {
				String code = FunctionEncoder.encodeConstructor(Arrays.asList(new Utf8String(getAddress(1))));
				Transaction transaction = Transaction.createContractTransaction(getAddress(0), null, null, bincode+code);
				Request<?, EthSendTransaction> request = web3j.ethSendTransaction(transaction);
				EthSendTransaction response = request.sendAsync().get();
				result = response.getResult();
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		return result;
	}
	public static String addUserMapping(String email,String name,String password,String transactionHash,String userAddress,String orderAddress) {
		String result = null;
		Boolean unlock = unlockAccount(getAddress(0), syPassword);
		if(unlock) {
			try {
				Function function = new Function("addUserMapping", Arrays.asList(
						new Utf8String(email),
						new Utf8String(name),
						new Utf8String(password),
						new Utf8String(transactionHash),
						new Utf8String(userAddress)
						), Arrays.asList());
				String code = FunctionEncoder.encode(function);
				Transaction transaction = Transaction.createFunctionCallTransaction(getAddress(0), null, null, Contract.GAS_LIMIT, orderAddress, code);
				Request<?, EthSendTransaction> request = web3j.ethSendTransaction(transaction);
				EthSendTransaction response = request.sendAsync().get();
				result = response.getResult();
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		return result;
	}
	public static User getUserByEmail(String email,String orderAddress) {
		User user = null;
		try {
			Function function = new Function("getUserByEmail", Arrays.asList(new Utf8String(email)), Arrays.asList(
					new TypeReference<Uint256>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {}
					));
			String code = FunctionEncoder.encode(function);
			Transaction transaction = Transaction.createEthCallTransaction(getAddress(0), orderAddress, code);
			Request<?, EthCall> request = web3j.ethCall(transaction, DefaultBlockParameterName.LATEST);
			EthCall response = request.send();
			String result = response.getResult();
			List<Type> list = FunctionReturnDecoder.decode(result, function.getOutputParameters());
			user = new User();
			user.setId(Integer.parseInt(list.get(0).getValue().toString()));
			user.setEmail(list.get(1).getValue().toString());
			user.setName(list.get(2).getValue().toString());
			user.setPassword(list.get(3).getValue().toString());
			user.setTransactionHash(list.get(4).getValue().toString());
			user.setUserAddress(list.get(5).getValue().toString());
		} catch (Exception e) {
			// TODO: handle exception
		}
		return user;
	}
	public static Goods getGoodsById(int id,String orderAddress) {
		Goods goods = null;
		try {
			Function function = new Function("getGoodsById", Arrays.asList(new Uint256(id)), Arrays.asList(
					new TypeReference<Uint256>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {}
					));
			String code = FunctionEncoder.encode(function);
			Transaction transaction = Transaction.createEthCallTransaction(getAddress(0), orderAddress, code);
			Request<?, EthCall> request = web3j.ethCall(transaction, DefaultBlockParameterName.LATEST);
			EthCall response = request.send();
			String result = response.getResult();
			List<Type> list = FunctionReturnDecoder.decode(result, function.getOutputParameters());
			goods = new Goods();
			goods.setId(Integer.parseInt(list.get(0).getValue().toString()));
			goods.setName(list.get(1).getValue().toString());
			goods.setImgUrl(list.get(2).getValue().toString());
			goods.setPrice(Float.parseFloat(list.get(3).getValue().toString()));
			goods.setSellerAddress(list.get(4).getValue().toString());
		} catch (Exception e) {
			// TODO: handle exception
		}
		return goods;
	}
	public static String addOrderList(String goodsName,int goodsNum,String imgUrl,String orderPrice,String buyTime,String payTime,int status,String orderAddress) {
		String result = null;
		Boolean unlock = unlockAccount(getAddress(0), syPassword);
		if(unlock) {
			try {
				Function function = new Function("addOrderList", Arrays.asList(
						new Utf8String(goodsName),
						new Uint256(goodsNum),
						new Utf8String(imgUrl),
						new Utf8String(orderPrice),
						new Utf8String(buyTime),
						new Utf8String(payTime),
						new Uint256(status),
						new Utf8String(orderAddress)
						), Arrays.asList());
				String code = FunctionEncoder.encode(function);
				Transaction transaction = Transaction.createFunctionCallTransaction(getAddress(0), null, null, Contract.GAS_LIMIT, orderAddress, code);
				Request<?, EthSendTransaction> request = web3j.ethSendTransaction(transaction);
				EthSendTransaction response = request.sendAsync().get();
				result = response.getResult();
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		return result;
	}
	public static Order getOrderById(int id,String userEmail,String transactionHash,String orderAddress) {
		Order order = null;
		try {
			Function function = new Function("getOrderById", Arrays.asList(new Uint256(id)), Arrays.asList(
					new TypeReference<Uint256>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Uint256>() {},
					new TypeReference<Utf8String>() {}
					));
			String code = FunctionEncoder.encode(function);
			Transaction transaction = Transaction.createEthCallTransaction(getAddress(0), orderAddress, code);
			Request<?, EthCall> request = web3j.ethCall(transaction, DefaultBlockParameterName.LATEST);
			EthCall response = request.send();
			String result = response.getResult();
			List<Type> list = FunctionReturnDecoder.decode(result, function.getOutputParameters());
			order = new Order();
			order.setId(Integer.parseInt(list.get(0).getValue().toString()));
			order.setGoodsName(list.get(1).getValue().toString());
			order.setImgUrl(list.get(2).getValue().toString());
			order.setOrderPrice(list.get(3).getValue().toString());
			order.setBuyTime(list.get(4).getValue().toString());
			order.setPayTime(list.get(5).getValue().toString());
			order.setStatus(list.get(6).getValue().toString());
			order.setOrderAddress(list.get(7).getValue().toString());
			order.setUserEmail(userEmail);
			order.setTransactionHash(transactionHash);
		} catch (Exception e) {
			// TODO: handle exception
		}
		return order;
	}
	public static OrderDetail getOrderInfo(int id,String userAddress,String orderAddress) {
		OrderDetail detail = null;
		try {
			Function function = new Function("getOrderInfo", Arrays.asList(new Uint256(id)), Arrays.asList(
					new TypeReference<Utf8String>() {},
					new TypeReference<Uint256>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Utf8String>() {},
					new TypeReference<Uint256>() {},
					new TypeReference<Utf8String>() {}
					));
			String code = FunctionEncoder.encode(function);
			Transaction transaction = Transaction.createEthCallTransaction(getAddress(0), orderAddress, code);
			Request<?, EthCall> request = web3j.ethCall(transaction, DefaultBlockParameterName.LATEST);
			EthCall response = request.send();
			String result = response.getResult();
			List<Type> list = FunctionReturnDecoder.decode(result, function.getOutputParameters());
			detail = new OrderDetail();
			detail.setGoodsPrice(list.get(0).getValue().toString());
			detail.setGoodsNum(list.get(1).getValue().toString());
			detail.setOrderPrice(list.get(2).getValue().toString());
			detail.setSellerAddress(list.get(3).getValue().toString());
			detail.setBuyTime(list.get(4).getValue().toString());
			detail.setPayTime(list.get(5).getValue().toString());
			detail.setStatus(list.get(6).getValue().toString());
			detail.setOrderAddress(list.get(7).getValue().toString());
			detail.setBuyerAddress(userAddress);
		} catch (Exception e) {
			// TODO: handle exception
		}
		return detail;
	}
	public static String updateOrderById(int id,String payTime,int status,String orderAddress) {
		String result = null;
		Boolean unlock = unlockAccount(getAddress(0), syPassword);
		if(unlock) {
			try {
				Function function = new Function("updateOrderById", Arrays.asList(
						new Uint256(id),
						new Utf8String(payTime),
						new Uint256(status)
						), Arrays.asList());
				String code = FunctionEncoder.encode(function);
				Transaction transaction = Transaction.createFunctionCallTransaction(getAddress(0), null, null, Contract.GAS_LIMIT, orderAddress, code);
				Request<?, EthSendTransaction> request = web3j.ethSendTransaction(transaction);
				EthSendTransaction response = request.sendAsync().get();
				result = response.getResult();
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		return result;
	}
}

















